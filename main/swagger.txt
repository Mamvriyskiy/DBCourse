openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: auth
    description: Access to the system
  - name: home
    description: Operations about house
  - name: access
    description: Operations about user
  - name: devices
    description: Operations about devices
paths:
  /auth/sign-up:
    post:
      tags:
        - auth
      summary: Registration of new users
      description: Registration of users in the system using a password, email and login
      # operationId: updatePet
      requestBody:
        description: Adding new users to the system using a password, email, and login
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "abcd"
                name: 
                  type: string
                  example: "user"
                email:
                  type: string
                  example: "email@mail.ru"
                
        required: true
      responses:
        '200':
          description: Successful operation
        # '404':
        #   description: Auth not found
        '409':
          description: A user with such an email has already been registered
        '500':
          description: Internal error on the server
      
  /auth/sign-in:
    post:
      tags:
        - auth
      summary: User authentication
      description: User authentication by mail and password
      requestBody:
        description: Search for a user in the system using the specified email and password
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "abcd"
                email:
                  type: string
                  example: "email@mail.ru"
                
        required: true
        
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjY3NzgxNjUsImlhdCI6MTcyNjczNDk2NSwidXNlcklkIjoxfQ.aboYTZrft9YR1q59Q7u9AdyVhUDsi5ep4Pfzicde-5Y"
                  name:
                    type: string
                    example: "user1"
                  email:
                    type: string
                    example: "email1"
                  
        '400':
          description:  Invalid data value
        '401':
          description: Access denied
        '500':
          description: Internal error on the server
      
  /auth/code:
    post:
      tags:
        - auth
      summary: Update password
      description: Sending the recovery code to the mail
      requestBody:
        description: Sending the recovery code to the specified email address
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "email@mail.ru"
                
        required: true
        
      responses:
        '200':
          description: successful operation
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
      
  /auth/verification:
    post:
      tags:
        - auth
      summary:  Checking the sent code
      description: Checking the verification code sent to the mail
      requestBody:
        description: Checking the verification code sent to the mail
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "1a2b3c"
                
        required: true
        
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid code
        '401':
          description: Access denied
        '500':
          description: Internal error on the server
      
  /auth/password:
    put:
      tags:
        - auth
      summary:  Update password
      description: Update password
      requestBody:
        description: Checking the entered passwords for a match and updating it in the system
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "abcd"
                
        required: true
        
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid password
        '401':
          description: Access denied
        '500':
          description: Internal error on the server
      
  /homes:
    post:
      tags:
        - home
      summary: Create a new home
      description: Creating a new home by the user
      
      requestBody:
        description: Creating a new house by name, geogrpahcoords
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "home"
                geographcoors:
                  type: object
                  properties:
                    latitude:
                      type: number
                      format: float
                      example: 37.7749
                    longitude:
                      type: number
                      format: float
                      example: -122.4194
                
        required: true
        
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  homeid:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: "home"
                  geographcoors:
                    type: object
                    properties:
                      latitude:
                        type: number
                        format: float
                        example: 37.7749
                      longitude:
                        type: number
                        format: float
                        example: -122.4194
                  accessLevel:
                    type: integer
                    example: 4
        '400':
          description: Invalid data value
        '401':
          description: Access denied
        '403':
          description: Access denied due to insufficient permissions
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
          
    get:
      tags:
        - home
      summary: List of user's houses
      description: Get a list of the user's houses
          
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    homeid:
                      type: integer
                      example: 2
                    name:
                      type: string
                      example: "home"
                    geographcoors:
                      type: object
                      properties:
                        latitude:
                          type: number
                          format: float
                          example: 37.7749
                        longitude:
                          type: number
                          format: float
                          example: -122.4194
                    accessLevel:
                      type: integer  # Fixing the typo from intger to integer
                      example: 4
        '404':
          description: The resource does not exist
          
        '500':
          description: Internal error on the server
          
  /homes/{homeID}:       
    delete:
      tags:
        - home
      summary: Delete home
      description: Removal of the house by the owner by name
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
          
      responses:
        '200':
          description: successful operation
        '401':
          description: Access denied
        '403':
          description: Access denied due to insufficient permissions
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
          
    put:
      tags:
        - home
      summary: Updating the home name
      description: Updating the home name
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
          
      requestBody:
        description: Updating the home name
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "home2"
                
        required: true
        
      responses:

        '200':
          description:  successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  homeid:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: "home2"
                  geographcoors:
                    type: object
                    properties:
                      latitude:
                        type: number
                        format: float
                        example: 37.7749
                      longitude:
                        type: number
                        format: float
                        example: -122.4194
        '401':
          description: Access denied
        '403':
          description: Access denied due to insufficient permissions
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
    
    get:
      tags:
        - home
      summary: Get inforamtions about home
      description: Get inforamtions about home by homeid
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
          
          
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                properties:
                  homeid:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: "home"
                  geographcoors:
                    type: object
                    properties:
                      latitude:
                        type: number
                        format: float
                        example: 37.7749
                      longitude:
                        type: number
                        format: float
                        example: -122.4194
                  accessLevel:
                    type: integer
                    example: 4
        '404':
          description: The resource does not exist
          
        '500':
          description: Internal error on the server
          
  /homes/{homeID}/accesses:
    post:
      tags:
        - access
      summary: Adding a user to the house
      description: Adding a user to the house by specified mail
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
          
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email: 
                  type: string 
                  example: "123@mail.ru"
                accessLevel: 
                  type: integer 
                  example: 2
              
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  accessid:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: "user2"
                  email:
                    type: string
                    example: "email2"
                  accesslevel:
                    type: integer
                    example: 4
        '401':
          description: Access denied
        '403':
          description: Access denied due to insufficient permissions
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
    get:
      tags:
        - access
      summary: List of user's houses
      description: Get a list of the user's houses
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
          
      responses:
        '200':
          description:  successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    accessod:
                      type: integer
                      example: 2
                    name:
                      type: string
                      example: "user1"
                    email:
                      type: string
                      example: "user1@example.com"
                    accessLevel:
                      type: string
                      example: "owner"
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server

  /homes/{homeID}/accesses/{accessID}:
    delete:
      tags:
        - access
      summary: Remove a user from home
      description:  Remove a user from home
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
        - name: accessID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the device
          
      responses:
        '200':
          description: successful operation
        '401':
          description: Access denied
        '403':
          description: Access denied due to insufficient permissions
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
          
    get:
      tags:
        - access
      summary: Get informations about access 
      description: Get informations about access by accessid
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
        - name: accessID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the device
          
      responses:
        '200':
          description:  successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessid:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: "user1"
                  email:
                    type: string
                    example: "user1@example.com"
                  accessLevel:
                    type: integer
                    example: 4
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
          
    put:
      tags:
        - access
      summary: Update the user's access level
      description: Update the user's access level
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
        - name: accessID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the device
          
      requestBody:
        description: Update the user's access level
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "email1"
                level:
                  type: integer
                  example: 3
                
        required: true
        
      responses:

        '200':
          description:  successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessid:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: "user1"
                  email:
                    type: string
                    example: "email1"
                  accessLevel:
                    type: integer
                    example: 4
        '400':
          description: Invalid data value
        '401':
          description: Access denied
        '403':
          description: Access denied due to insufficient permissions
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
    
  /homes/{homeID}/devices:
    post:
      tags:
        - devices
      summary: Add a device
      description: Add a new device to your home
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
      
      requestBody:
        description: Add a new device to your home
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "dev1"
               
        required: true
        
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceid:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: "dev1"
                  brand:
                    type: string
                    example: "BrandX"
                  status:
                    type: string
                    example: "inactive"
        '400':
          description: Invalid data value
        '401':
          description: Access denied
        '403':
          description: Access denied due to insufficient permissions
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
    get:
      tags:
        - devices
      summary: List of devices houses
      description: Get a list of the devices houses
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
          
      responses:
        '200':
          description:  successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    deviceid:
                      type: integer
                      example: 2
                    name:
                      type: string
                      example: "dev1"
                    brand:
                      type: string
                      example: "BrandX"
                    status:
                      type: string
                      example: "active"
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
    
  /homes/{homeID}/devices/{deviceID}:
    get:
      tags:
        - devices
      summary: Get informations about device
      description: Get informations about device by deviceid
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
        - name: deviceID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the device
          
      responses:
        '200':
          description:  successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceid:
                      type: integer
                      example: 2
                  name:
                    type: string
                    example: "dev1"
                  brand:
                    type: string
                    example: "BrandX"
                  status:
                    type: string
                    example: "active"
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server

    delete:
      tags:
        - devices
      summary: Remove a device from home
      description:  Remove a device from home
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
        - name: deviceID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the device
          
      responses:
        '200':
          description: successful operation
        '401':
          description: Access denied
        '403':
          description: Access denied due to insufficient permissions
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
   
  /homes/{homeID}/devices/{deviceID}/status:
    put:
      tags:
        - devices
      summary: Start the device
      description: Start the device
      
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
        - name: deviceID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the device
        - name: status
          in: path
          required: true
          schema:
            type: string
            enum: ["active", "inactive"]
            example: "active"
          description: Status of the device
      
      # requestBody:
      #   description: Start the device
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           name:
      #             type: string
      #             example: "dev1"
      #           home:
      #             type: string
      #             example: "home1"
               
      # required: true
        
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid data value
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
           
  /homes/{homeID}/devices/{deviceID}/history:
    get:
      tags:
        - devices
      summary: List of device history
      description: Get a list of device history
      parameters:
        - name: homeID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the home
        - name: deviceID
          in: path
          required: true
          schema:
            type: integer
          description: ID of the device
          
      responses:
        '200':
          description: A list of devices' history records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "dev1"
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        timework:
                          type: integer
                          description: Total time worked by the device
                          example: 120
                        average:
                          type: number
                          format: float
                          description: Average indicator value
                          example: 23.5
                        energy:
                          type: integer
                          description: Energy consumed by the device
                          example: 300
        '404':
          description: The resource does not exist
        '500':
          description: Internal error on the server
          
          
          